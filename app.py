# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fne2ghDSxNIpR3xGLHzPnCiPTJqGbSXB
"""

import pandas as pd

# Load the uploaded dataset
file_path = '/content/Crop_Yield_Prediction.csv'
df = pd.read_csv(file_path)

# Show basic info and first few rows
df_info = df.info()
df_head = df.head()

df_info, df_head

# Step 1: Import libraries
import pandas as pd
import numpy as np
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from xgboost import XGBRegressor
from sklearn.metrics import mean_squared_error, r2_score
import joblib

# Step 2: Load your dataset
df = pd.read_csv("Crop_Yield_Prediction.csv")  # Make sure the file is in your working directory

# Step 3: Preprocessing
le = LabelEncoder()
df['Crop_encoded'] = le.fit_transform(df['Crop'])
df['Log_Yield'] = np.log1p(df['Yield'])

# Step 4: Clean the dataset
df_model_cleaned = df.drop(columns=['Crop', 'Yield'])

# Step 5: Define features and target
X = df_model_cleaned.drop(columns='Log_Yield')
y = df_model_cleaned['Log_Yield']

# Step 6: Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 7: Train XGBoost model
xgb_model = XGBRegressor(n_estimators=100, learning_rate=0.1, max_depth=5, random_state=42)
xgb_model.fit(X_train, y_train)

# Step 8: Evaluate model
y_pred = xgb_model.predict(X_test)
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
r2 = r2_score(y_test, y_pred)

print("âœ… Model Trained")
print("ðŸ“‰ RMSE:", rmse)
print("ðŸ“ˆ RÂ² Score:", r2)

# Optional: Save the model
joblib.dump(xgb_model, "xgb_crop_yield_model.pkl")